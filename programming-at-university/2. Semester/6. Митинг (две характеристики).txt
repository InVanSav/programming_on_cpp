#include <iostream>
#include <vector>
#include <fstream>
#include <algorithm>

struct worker {
  int math;
  int programming;
  int num;
};

bool comp(worker a, worker b) {
  return a.math < b.math;
}

bool comp_num(worker a, worker b) {
  return a.num < b.num;
}

int main() {
  
  std::ifstream fin("input.txt");
  std::ofstream fout("output.txt");
  int n;
  std::vector<worker> posCandidats;

  fin >> n;
  posCandidats.resize(n);
  
  for (int i(0); i < n; ++i) {
    posCandidats[i].num = i + 1;
    fin >> posCandidats[i].math >> posCandidats[i].programming;
  }
  
  sort(posCandidats.begin(), posCandidats.end(), comp);

  for (int i(n - 1); i >= 0; --i) {
    
    if (posCandidats[i].num == -1) {
      continue;
    }
    
    for (int j(0); j < i; ++j) {

      if (posCandidats[j].num == -1) {
        continue;
      }
      if (posCandidats[i].math > posCandidats[j].math && posCandidats[i].programming > posCandidats[j].programming) {
        posCandidats[j].num = -1;
      }
      
    }
    
  }

  sort(posCandidats.begin(), posCandidats.end(), comp_num);

  for (auto &posCandidat : posCandidats)
    if (posCandidat.num != -1) {
      fout << posCandidat.num << " ";
    }

  return 0;
}