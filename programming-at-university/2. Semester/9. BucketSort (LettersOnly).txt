#include <fstream>
#include <vector>
#include <algorithm>

std::vector<std::string> bucketSort(std::vector<std::string> &arr) {

  std::vector<std::vector<std::string>> bucket(74);
  std::vector<std::string> answer;

  for (auto item : arr) {
    int index = ((int) item[0]) - 48;
    bucket[index].push_back(item);
  }

  for (int i = 0; i < bucket.size(); i++) {
    sort(bucket[i].begin(), bucket[i].end());
  }

  for (int i = 0; i < bucket.size(); i++) {
    if (!bucket[i].empty()) {
      for (int j = 0; j < bucket[i].size(); j++) {
        answer.push_back(bucket[i][j]);
      }
    }
  }
  return answer;
}

int main() {

  std::ifstream fin("input.txt");
  std::ofstream fout("output.txt");
  int n;
  fin >> n;
  std::vector<std::string> toSort(n);

  for (int i = 0; i < n; i++){
    fin >> toSort[i];
  }

  std::vector<std::string> result = bucketSort(toSort);
  
  for (auto item : result) {
    fout << item << '\n';
  }

}